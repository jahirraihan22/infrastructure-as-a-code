# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "geerlingguy/ubuntu2004"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
   config.vm.network "private_network", ip: "192.168.56.20"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
   config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
   config.vm.provision "shell", inline: <<-SHELL
     sudo apt update

     sudo apt install ca-certificates apt-transport-https software-properties-common
     sudo add-apt-repository ppa:ondrej/php
     sudo grep -rhE ^deb /etc/apt/sources.list* | grep -i ondrej
     sudo apt update

     sudo apt install apache2 \
         ghostscript \
         libapache2-mod-php \
         mysql-server \
         php8.1 \
         php-bcmath \
         php-curl \
         php-imagick \
         php-intl \
         php-json \
         php-mbstring \
         php-mysql \
         php-xml \
         php-cli \
         php-zip \
         git \
         composer -y
                 
      sudo phpenmod mbstring
      sudo systemctl restart apache2      
      sudo systemctl status apache2
      
      # setting up virtual host
      
      sudo mkdir /var/www/mysite.test
      sudo chown -R $USER:$USER /var/www/mysite.test
      sudo chmod -R 755 /var/www/mysite.test
      cd /var/www/mysite.test
      # composer create-project laravel/laravel mysite
      cp -r /vagrant/mysite /var/www/mysite.test
      sudo chmod -R 777 /var/www/mysite.test/mysite/storage
      cp /vagrant/mysite.conf /etc/apache2/sites-available
      
      # sudo nano /etc/apache2/sites-available/your_domain.conf
      
      sudo a2ensite mysite.conf
      sudo a2dissite 000-default.conf
      sudo apache2ctl configtest
      sudo systemctl restart apache2
      
      # not mandatory----------------------------------
      #sudo -u www-data nano /srv/www/wordpress/wp-config.php

      # define( 'AUTH_KEY',         'put your unique phrase here' );
      # define( 'SECURE_AUTH_KEY',  'put your unique phrase here' );
      # define( 'LOGGED_IN_KEY',    'put your unique phrase here' );
      # define( 'NONCE_KEY',        'put your unique phrase here' );
      # define( 'AUTH_SALT',        'put your unique phrase here' );
      # define( 'SECURE_AUTH_SALT', 'put your unique phrase here' );
      # define( 'LOGGED_IN_SALT',   'put your unique phrase here' );
      # define( 'NONCE_SALT',       'put your unique phrase here' );

      # not mandatory---------------------------------- end

   SHELL
end
